---
import Buttons from "./Buttons.astro";
import Toast from "./Toast.astro";
import Experience from "./Experience.astro";
import Projects from "./Projects.astro";

---

<style>
  :root{
    --green-dot: #64C589;
    --dark: #000005;
    --light: #EAECF0;
    --light-gray: #F6F6F6;
    --gray: #A4AAB6;
    --radius-full: 100%;
  }
  body{
    padding: 0 0.5rem !important;
    background-color: var(--light-gray);
  }

  .profile-pic{
    border-radius: var(--radius-full);
    width: 300px;
    height: 300px;
    border: 4px solid var(--light);
  }
  .profile-pic > img {
    width: 100%;
    height: 100%;
    border-radius: var(--radius-full);
  }
  /* FIX THIS CSS BECAUSE @theme contains global variables*/
.border-container {
  position: relative;
  width: 200px;
  height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-weight: bold;
  color: white;
  background: black;
  border-radius: 50%;
  overflow: hidden; /* Ensures glow doesn't leak outside */
  padding: 20px;
}

/* Glow Effect */
.border-container::before {
  content: "";
  position: absolute;
  width: 300px;
  height: 300px;
  background: radial-gradient(circle, rgba(136, 58, 255, 0.8), rgba(236, 72, 153, 0.6), rgba(59, 130, 246, 0.6), transparent);
  top: var(--yPos);
  left: var(--xPos);
  transform: translate(-50%, -50%);
  border-radius: 50%;
  transition: top 0.2s ease-out, left 0.2s ease-out;
  pointer-events: none;
  clip-path: circle(50%);
}

.content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%; /* Ensures content inside is also rounded */
  position: relative;
}
.content::after{
  content: "";
  position: absolute;
  width: 185px;
  height: 185px;
  background: white;
  border-radius: 100%;
}

</style>
<main class="m-auto max-w-[1200px] mt-2 rounded bg-white shadow-md p-4 h-auto">
  <Toast status="success"/>
  <section>
    <div class="flex justify-between items-center gap-4">
      <Buttons title="Full Stack Engineer" type="decoration" design="default" customClass="text-[0.55rem]! md:text-xs!"/>
      <Buttons title="Open To Work" type="decoration" design="available" customClass="text-[0.55rem]! md:text-xs!"/>
    </div>
    <div class="w-full flex flex-col gap-4 mt-8 items-center p-2 lg:flex-row-reverse lg:justify-between">
      <!-- Profile Picture -->
      <div class="bg-white profile-pic p-2 flex items-center justify-center">
        <img alt="profile-pic" src="/profile-pic.svg"/>
      </div>

      <!-- Text Content -->
      <div class="h-full flex flex-col gap-4">
        <h1 class="font-bold text-2xl">I'm Eliuth</h1>
        <p class="relative text-sm/6 text-gray-500">Full Stack Developer based on Galicia, Spain ðŸ‡ªðŸ‡¸  <br>
        <br />
          <span class="relative inline-block before:absolute before:-inset-1 before:block before:-skew-y-2 before:bg-midnight-void">
            <span class="relative font-bold dark:text-white">TECH STACK:&nbsp; </span>
        </span>
        &nbsp;JavaScript | Typescript| React | Astro | Node.js | Express <br> Java | MySQL | Tailwind CSS | AWS 
        </p>
        <!--- Buttons --->
        <div class="flex flex-col gap-4 md:flex-row">
          <Buttons title="Linkedin" type="link" design="dark" customClass="text-center" link="https://www.linkedin.com/in/eliuth-bompart-in/"/>
          <Buttons title="Copy Email" type="default" design="outlined" customClass="copy-email"/>
        </div>
      </div>
   </div>
  </section>
  <Experience />
  <Projects />

  <!-- <div class="border-container">
    <div class="content">
      <p>Hover Me!</p>
    </div>
  </div> -->
</main>
<script>
  import {useNewEvent} from "../utils/customEvents.ts";
    
  /* Copy Email*/
  function copyToClipboard(){
    try{
      const res = navigator.clipboard.writeText("eliuttth.dev@gmail.com");
      useNewEvent({action: "ActiveToast", event: {
        action: "copy",
        status: "successful",
        message: "Email copy to clipboard!"
      }})
    }catch(err){
      console.log(err.message);
    }
  }

  const btnCopyEmail = document.querySelector(".copy-email");
  btnCopyEmail.addEventListener("click", () => {
    copyToClipboard();
  })

  /*DYNAMIC DIV BG*/
  const borderDiv = document.querySelector(".border-container");

  function updateBorder(x, y, size = 200) {
    const { left, top, width, height } = borderDiv.getBoundingClientRect();

    let xPos = ((x - left) / width) * 100;
    let yPos = ((y - top) / height) * 100;

    // Set limits to prevent excessive movement
    const minLimit = 20;  // Min % position
    const maxLimit = 80;  // Max % position

    xPos = Math.max(minLimit, Math.min(xPos, maxLimit));
    yPos = Math.max(minLimit, Math.min(yPos, maxLimit));

    borderDiv.style.setProperty("--xPos", `${xPos}%`);
    borderDiv.style.setProperty("--yPos", `${yPos}%`);
    borderDiv.style.setProperty("--size", `${size}px`);
  }
  document.addEventListener("mousemove", (e) => {
    updateBorder(e.clientX, e.clientY, 80);
  });

  document.addEventListener("mouseleave", () => {
    updateBorder(window.innerWidth / 2, window.innerHeight / 2, 200);
  });

  updateBorder(window.innerWidth / 2, window.innerHeight / 2, 200);
</script>
